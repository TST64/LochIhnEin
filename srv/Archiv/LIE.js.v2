
    ////////////////////////////////////////////////////////////////////////////////////////////
    //DECLAREATION
    ////////////////////////////////////////////////////////////////////////////////////////////
    
    // Create express app

    var express = require('express');
    var fs = require('fs');
    var https = require('https');
    var md5 = require("md5")
    var bodyParser = require("body-parser");  //When we send POST data, normally this information is URL encoded from a form. 
                                            //We need to add some extra pre-processing to parse the body of POST requests 


    //MAIN

        //the main application object
        var app = express();

        app.use(bodyParser.urlencoded({ extended: false }));
        app.use(bodyParser.json());                           //The body-parser will convert raw post string into a javascript object JSON

        // Root endpoint
        app.get("/", (req, res, next) => 
        {
            res.json({"message":"Ok"})
        });


        var db = require("./modules/database.js");

        const cUsers = require('./modules/classUsers.js');
        let oUsers = new cUsers(app, db);


        // Server port
        var HTTPS_PORT = 8000;

        // Start server
        https.createServer(
        {
            key: fs.readFileSync('./https-certificate/server.key'),
            cert: fs.readFileSync('./https-certificate/server.cert')
        }, app).listen(HTTPS_PORT, function () 
        {
            console.log("Server running on port %PORT%".replace("%PORT%",HTTPS_PORT));
        });
        

        // app.listen(HTTP_PORT, () => 
        // {
        //     console.log("Server running on port %PORT%".replace("%PORT%",HTTP_PORT))
        // });






        // ///////////////////////////////////////////////////////////////////////////////
        // // Insert here other API endpoints
        // ///////////////////////////////////////////////////////////////////////////////

        // // read list of users
        // app.get("/api/users", (req, res, next) => 
        // {
        //     var sql = "select * from user"
        //     var params = []
        //     db.all(sql, params, (err, rows) => 
        //     {
        //         if (err) 
        //         {
        //         res.status(400).json({"error":err.message});
        //         return;
        //         }
        //         res.json(
        //         {
        //             "message":"success",
        //             "data":rows
        //         })
        //     });
        // });


        // // Get a single user by id
        // app.get("/api/user/:id", (req, res, next) => {
        //     var sql = "select * from user where id = ?"
        //     var params = [req.params.id]
        //     db.get(sql, params, (err, row) => {
        //         if (err) {
        //         res.status(400).json({"error":err.message});
        //         return;
        //         }
        //         res.json({
        //             "message":"success",
        //             "data":row
        //         })
        //     });
        // });

        // // Create a new user
        // app.post("/api/user/", (req, res, next) => {
        //     var errors=[]
        //     if (!req.body.password)
        //     {
        //         errors.push("No password specified");
        //     }
        //     if (!req.body.email)
        //     {
        //         errors.push("No email specified");
        //     }
        //     if (errors.length)
        //     {
        //         res.status(400).json({"error":errors.join(",")});
        //         return;
        //     }
        //     var data = {
        //                     name: req.body.name,
        //                     email: req.body.email,
        //                     password : md5(req.body.password)
        //                 }
            
        //     var sql ='INSERT INTO user (name, email, password) VALUES (?,?,?)'
        //     var params =[data.name, data.email, data.password]
            
        //     db.run(sql, params, function (err, result) 
        //     {
        //         if (err)
        //         {
        //             res.status(400).json({"error": err.message})
        //             return;
        //         }
        //         res.json
        //         ({
        //             "message": "success",
        //             "data": data,
        //             "id" : this.lastID
        //         });
        //     });
        // })


        // //update existing user  - https://THOMAS-RASPBERRY-PI-2:8000/api/user/3?name=Test&email=test@a.b&password=test123
        // app.patch("/api/user/:id", (req, res, next) => 
        // {
        //     var data = {
        //                     name: req.body.name,
        //                     email: req.body.email,
        //                     password : req.body.password ? md5(req.body.password) : null
        //                 };

        //     db.run(
        //         `UPDATE user set 
        //            name = COALESCE(?,name), 
        //            email = COALESCE(?,email), 
        //            password = COALESCE(?,password) 
        //            WHERE id = ?`,
        //         [data.name, data.email, data.password, req.params.id],
        //         function (err, result) 
        //         {
        //             if (err)
        //             {
        //                 res.status(400).json({"error": res.message})
        //                 return;
        //             }
        //             res.json({
        //                 message: "success",
        //                 data: data,
        //                 changes: this.changes
        //             })
        //     });
        // })


        // //Delete a user

        // app.delete("/api/user/:id", (req, res, next) => 
        // {
        //     db.run(
        //         'DELETE FROM user WHERE id = ?',
        //         req.params.id,
        //         function (err, result) {
        //             if (err){
        //                 res.status(400).json({"error": res.message})
        //                 return;
        //             }
        //             res.json({"message":"deleted", changes: this.changes})
        //     });
        // })


    ///////////////////////////////////////////////////////////////////////////////

    // Default response for any other request
    app.use(function(req, res)
    {
        res.status(404);
    });

    /// END MAIN




